About the <<micro kernel>> of SIMILAR

	The <<micro kernel>> of SIMILAR defines the core classes of the SIMILAR API. It provides a direct correspondence between the concepts developed in the SIMILAR (formerly IRM4MLS) theory and the concrete implementation of simulation.
	
	It provides only the bare minimal implementation of these concepts, to leave the implementation of simulation opened to many optimizations. Thus, this kernel is the most appropriate for developers wishing to <<tune precisely the low level implementation of the simulation>>.
	
* Components

	The micro kernel of SIMILAR is characterized by three components:
	
	* The <<API of the micro kernel>>, containing the java classes of that kernel.
	
	* The <<common libraries>> of the minimal kernel, containing generic implementations of simulation algorithms and results exporting features.
	
	* The <<examples>> illustrating the use of the <micro kernel> and the <common libraries> to design simulations.
	
	[]
	
[./images/similarMicroKernelStructure.png] The structure of components of the <micro kernel> of SIMILAR

* Focus of this part of the documentation

	This part of the documentation focuses on the <<API of the minimal kernel>>. It is divided in the following sections:
	
	[[I]] {{{./architecture.html}General architecture of a simulation with SIMILAR}}
	
		[[a]] {{{./architecture-bijection.html}From theory to implementation}}
	
		[[b]] {{{./architecture-engine.html}Simulation engine}}
	
		[[c]] {{{./architecture-model.html}Simulation model}}
	
		[[d]] {{{./architecture-probe.html}Probes}}
	
		[[e]] {{{./architecture-system.html}System influences}}
	
	[[II]] {{{./design.html}Design guide}}
	
		[[a]] {{{./design-engine.html}Simulation engine}}
	
		[[b]] {{{./design-model.html}Simulation model}}
	
		[[c]] {{{./probe.html}Probe}}
	
	[[III]] {{{./perform.html}Performing simulations}}